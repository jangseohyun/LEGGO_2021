/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2021-07-02 04:55:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class FindPw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/FinalProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/PrjApp/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1625098681000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>FindPw</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t<!-- 메일 전송 -->\r\n");
      out.write("\tfunction send_mail(){\r\n");
      out.write("\t    window.open(\"./test_mail.jsp\", \"\", \"width=370, height=360, resizable=no, scrollbars=no, status=no\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\twindow.onload = function()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tfunction onClick()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t    document.querySelector('.modal_wrap').style.display ='block';\r\n");
      out.write("\t\t    document.querySelector('.black_bg').style.display ='block';\r\n");
      out.write("\t\t}   \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction offClick()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t    document.querySelector('.modal_wrap').style.display ='none';\r\n");
      out.write("\t\t    document.querySelector('.black_bg').style.display ='none';\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdocument.getElementById('modal_btn').addEventListener('click', onClick);\r\n");
      out.write("\t\tdocument.querySelector('.modal_close').addEventListener('click', offClick);\r\n");
      out.write("\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 팝업 -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("body\r\n");
      out.write("{\r\n");
      out.write("    font-family: 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal_wrap{\r\n");
      out.write("        display: none;\r\n");
      out.write("        width: 500px;\r\n");
      out.write("        height: 280px;\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top:50%;\r\n");
      out.write("        left: 50%;\r\n");
      out.write("        margin: -250px 0 0 -250px;\r\n");
      out.write("        background:#eee;\r\n");
      out.write("        z-index: 2;\r\n");
      out.write("    }\r\n");
      out.write("    .black_bg{\r\n");
      out.write("        display: none;\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        content: \"\";\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        background-color:rgba(0, 0,0, 0.5);\r\n");
      out.write("        top:0;\r\n");
      out.write("        left: 0;\r\n");
      out.write("        z-index: 1;\r\n");
      out.write("    }\r\n");
      out.write("    .modal_close{\r\n");
      out.write("        width: 26px;\r\n");
      out.write("        height: 26px;\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: -30px;\r\n");
      out.write("        right: 0;\r\n");
      out.write("    }\r\n");
      out.write("    .modal_close> a{\r\n");
      out.write("        display: block;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        background:url(https://img.icons8.com/metro/26/000000/close-window.png);\r\n");
      out.write("        text-indent: -9999px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"img js-fullheight\" style=\"background-image: url(images/gangneung.jpg);\">\r\n");
      out.write("<p class=\"userimg\">mong2unnie 님의 사진입니다.&nbsp;&nbsp;&nbsp;</p>\r\n");
      out.write("<section class=\"ftco1-section\">\r\n");
      out.write("\t\t<div class=\"container\" style=\"padding: 50px;\">\r\n");
      out.write("\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-6 text-center mb-5\">\r\n");
      out.write("\t\t\t\t<br><br><br><br>\r\n");
      out.write("\t\t\t\t\t<h2 class=\"heading-section\" style=\"font-family: 'Noto Sans KR', sans-serif;\">비밀번호 찾기</h2>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br><br>\r\n");
      out.write("\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t<!-- \r\n");
      out.write("\t\t\t\t<div class=\"col-md-6 text-center mb-5\">\r\n");
      out.write("\t\t\t\t\t<div class=\"text-center\" style=\"width: 450px; background-color: rgba( 255, 255, 255, 0.7 ); color: #000000; border-radius: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t<br>가입하신 이메일을 입력해주세요.<br>임시 비밀번호를 보내드립니다.<br><br>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t -->\r\n");
      out.write("\t\t\t\t<div class=\"col-md-6 col-lg-4\">\r\n");
      out.write("\t\t\t\t\t<div class=\"login-wrap p-0\">\r\n");
      out.write("\t\t\t\t\t\t<form action=\"#\" class=\"signin-form\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h6 class=\"text-center\" style=\"color: white\">가입하신 이메일을 입력해주세요.</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" style=\"background-color: rgba( 255, 255, 255, 0.2 );\" placeholder=\"이메일\" required>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<br><br>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- onclick=\"send_mail()\" -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"form-control btn3 btn3-primary submit px-3\" id=\"modal_btn\" onclick=\"send_mail()\">메일 전송</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"black_bg\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal_wrap\" style=\"border-radius: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t    <div class=\"modal_close\"><a href=\"#\">close</a></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t    <div class=\"text-center\" style=\"padding: 100px; color: black; font-size: 20px;\">임시 비밀번호가 발송되었습니다.<br>메일함을 확인해주세요.</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/popper.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/main.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
